name: CBA Config Linter

on:
  pull_request_target:
    # branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Run Linter
      id: linter
      working-directory: ${{ github.workspace }}
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
      run: |
        mkdir -p ./lint-results
        python tools/python/cba_linter.py configs/ > ./lint-results/output.json
        echo "exit_code=$?" >> $GITHUB_OUTPUT

    - name: Process Results
      if: always()
      working-directory: ${{ github.workspace }}
      run: |
        # Create annotations
        jq -r '.[] | "::\(.level) file=\(.file),line=\(.line)::\(.message)"' ./lint-results/output.json >> $GITHUB_STEP_SUMMARY
        
        # Create comment body
        echo "### CBA Config Lint Results" > ./lint-results/comment.md
        echo "| File | Line | Level | Message |" >> ./lint-results/comment.md
        echo "|------|------|-------|---------|" >> ./lint-results/comment.md
        jq -r '.[] | "| \(.file) | \(.line) | \(.level) | \(.message) |"' ./lint-results/output.json >> ./lint-results/comment.md
        
        # Add no issues message if empty
        if [ ! -s ./lint-results/output.json ]; then
          echo "No linting issues found" >> ./lint-results/comment.md
        fi

    - name: Create PR Comment
      if: always() && github.event_name == 'pull_request_target'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const comment = fs.readFileSync('./lint-results/comment.md', 'utf8');
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: comment
          });

    - name: Fail on Errors
      if: steps.linter.outputs.exit_code != 0
      run: exit 1
